version: 2
jobs:
  web-react:
    docker:
      - image: circleci/node:9.11.1
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "services/web-react/package.json" }}
      - run: cd services/web-react; yarn install
      - save_cache:
          paths:
            - services/web-react/node_modules
          key: v1-dependencies-{{ checksum "services/web-react/package.json" }}
      - run: cd services/web-react; yarn test
  lambda-go:
    parallelism: 2
    environment:
      APP_ENV: "ci"
      ELASTICSEARCH_HOST_URL: "http://localhost:9200"
      DYNAMODB_HOST_URL: "http://localhost:8000"
      REGION: "us-west-2"
    working_directory: /go/src/github.com/vleango
    docker:
      - image: circleci/golang:1.10
      - image: cnadiminti/dynamodb-local
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Copy Project to /go/src
          command: |
            cp -r ~/project/services/lambda-go/src/github.com /go/src/
            cp -r ~/project/config/aws ~/.aws
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gopkg.toml" }}
      - run: export INSTALL_DIRECTORY=/usr/local/bin
      - run: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run: dep ensure
      - save_cache:
          paths:
            - services/lambda-go/pkg
          key: v1-dependencies-{{ checksum "Gopkg.toml" }}
      - run:
          name: connect to dynamodb
          command: /go/src/github.com/vleango/wait-for-it.sh localhost:8000 && echo 'connected!'
      - run:
          name: connect to elasticsearch
          command: /go/src/github.com/vleango/wait-for-it.sh localhost:9200 && echo 'connected!'
      - run:
          name: run tests
          command: ./test.sh
workflows:
  version: 2
  all_tests:
    jobs:
      - web-react
      - lambda-go
