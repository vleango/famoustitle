// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components ArticleListPage should correctly render ArticleListPage 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleListPage
    articles={
        Array [
            Object {
              "author": "dhh",
              "body": "One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, or even whole narratives, that fit just right. And the very best of those is when you’re forced to trade off multiple forces pulling in different directions. This is the story of one such case.
        
        It started with a simple refactoring. We allow people to post arbitrary URLs in Basecamp 3’s chat, which we’ll attempt to fetch and display inline, if its an image, movie, or a Twitter URL. There’s a security concern where we don’t want to allow internal IPs in those URLs, like 127.0.0.1, and then have our Downloader class attempt to trigger an internal request that may sidestep other security precautions.
        
        The specific policy isn’t as important as the fact that this precondition was originally just part of the Downloader class, but now I also needed it in our forthcoming webhooks API. Because just like with previewable chat URLs, webhooks allow users to set URLs that our system then calls. Same underlying security issue to deal with.
        
        No problemo: Just extract the protection into its own module and call it from both spots. First attempt at naming this new module gave me PrivateNetworkProtector, which seemed like a fine choice until I considered the method names that’d work with it:
        
        ",
              "created_at": "2018-02-28T14:48:54.444740278Z",
              "id": "123",
              "title": "Hunting for great names in programming",
            },
            Object {
              "author": "Josef Strzibny",
              "body": "
            Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging environment. And don’t get me wrong, you can (or should?) use the production settings there, but if you run it locally or on the same server as production, chances are you need a different database. And while you are at it, it may be handy to allow logging to console or change any other of Rails settings for that matter. In fact you can create as many other environments as you want and since it’s really easy I encourage you to do so.
        
        To create a new environment you need to create:
        
        a new config/environments/YOUR_ENVIRONMENT.rb file
        a new database configuration entry in config/database.yml if your application uses database
        a new secret key base entry in config/secrets.yml for apps on Rails 4.1 and higher
        As I mentioned first we would need a new file in config/environments/. A short example for staging environment could be:
            ",
              "created_at": "2018-02-28T14:48:54.444740278Z",
              "id": "456",
              "title": "Creating staging and other environments in Rails",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <div
          className="clearfix p-3"
>
          <Button
                    className="float-right"
                    color="primary"
                    id="add-article-btn"
                    tag={[Function]}
                    to="/articles/new"
          >
                    Add
          </Button>
           
</div>,
        Array [
          <ListGroup
            tag="ul"
>
            <ListGroupItem
                        action={true}
                        tag={[Function]}
                        to="/articles/123"
            >
                        <Media
                                    className="mb-5"
                        >
                                    <Media>
                                                <Media
                                                            alt="Generic placeholder image"
                                                            object={true}
                                                            src="http://via.placeholder.com/128x128"
                                                />
                                    </Media>
                                    <Media
                                                body={true}
                                                className="ml-4"
                                    >
                                                <Media
                                                            heading={true}
                                                >
                                                            Hunting for great names in programming
                                                </Media>
                                                <p>
                                                            dhh
                                                </p>
                                                <p>
                                                            02-28-2018 14:48
                                                </p>
                                                One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
                                    </Media>
                        </Media>
            </ListGroupItem>
</ListGroup>,
          <ListGroup
            tag="ul"
>
            <ListGroupItem
                        action={true}
                        tag={[Function]}
                        to="/articles/456"
            >
                        <Media
                                    className="mb-5"
                        >
                                    <Media>
                                                <Media
                                                            alt="Generic placeholder image"
                                                            object={true}
                                                            src="http://via.placeholder.com/128x128"
                                                />
                                    </Media>
                                    <Media
                                                body={true}
                                                className="ml-4"
                                    >
                                                <Media
                                                            heading={true}
                                                >
                                                            Creating staging and other environments in Rails
                                                </Media>
                                                <p>
                                                            Josef Strzibny
                                                </p>
                                                <p>
                                                            02-28-2018 14:48
                                                </p>
                                                
                                                    Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
                                    </Media>
                        </Media>
            </ListGroupItem>
</ListGroup>,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              className="float-right"
              color="primary"
              id="add-article-btn"
              tag={[Function]}
              to="/articles/new"
>
              Add
</Button>,
            " ",
          ],
          "className": "clearfix p-3",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add",
              "className": "float-right",
              "color": "primary",
              "id": "add-article-btn",
              "tag": [Function],
              "to": "/articles/new",
            },
            "ref": null,
            "rendered": "Add",
            "type": [Function],
          },
          " ",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "123",
        "nodeType": "function",
        "props": Object {
          "children": <ListGroupItem
            action={true}
            tag={[Function]}
            to="/articles/123"
>
            <Media
                        className="mb-5"
            >
                        <Media>
                                    <Media
                                                alt="Generic placeholder image"
                                                object={true}
                                                src="http://via.placeholder.com/128x128"
                                    />
                        </Media>
                        <Media
                                    body={true}
                                    className="ml-4"
                        >
                                    <Media
                                                heading={true}
                                    >
                                                Hunting for great names in programming
                                    </Media>
                                    <p>
                                                dhh
                                    </p>
                                    <p>
                                                02-28-2018 14:48
                                    </p>
                                    One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
                        </Media>
            </Media>
</ListGroupItem>,
          "tag": "ul",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "action": true,
            "children": <Media
              className="mb-5"
>
              <Media>
                            <Media
                                          alt="Generic placeholder image"
                                          object={true}
                                          src="http://via.placeholder.com/128x128"
                            />
              </Media>
              <Media
                            body={true}
                            className="ml-4"
              >
                            <Media
                                          heading={true}
                            >
                                          Hunting for great names in programming
                            </Media>
                            <p>
                                          dhh
                            </p>
                            <p>
                                          02-28-2018 14:48
                            </p>
                            One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
              </Media>
</Media>,
            "tag": [Function],
            "to": "/articles/123",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Media>
                  <Media
                                    alt="Generic placeholder image"
                                    object={true}
                                    src="http://via.placeholder.com/128x128"
                  />
</Media>,
                <Media
                  body={true}
                  className="ml-4"
>
                  <Media
                                    heading={true}
                  >
                                    Hunting for great names in programming
                  </Media>
                  <p>
                                    dhh
                  </p>
                  <p>
                                    02-28-2018 14:48
                  </p>
                  One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
</Media>,
              ],
              "className": "mb-5",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Media
                    alt="Generic placeholder image"
                    object={true}
                    src="http://via.placeholder.com/128x128"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "alt": "Generic placeholder image",
                    "object": true,
                    "src": "http://via.placeholder.com/128x128",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "body": true,
                  "children": Array [
                    <Media
                      heading={true}
>
                      Hunting for great names in programming
</Media>,
                    <p>
                      dhh
</p>,
                    <p>
                      02-28-2018 14:48
</p>,
                    "One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...",
                  ],
                  "className": "ml-4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Hunting for great names in programming",
                      "heading": true,
                    },
                    "ref": null,
                    "rendered": "Hunting for great names in programming",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "dhh",
                    },
                    "ref": null,
                    "rendered": "dhh",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "02-28-2018 14:48",
                    },
                    "ref": null,
                    "rendered": "02-28-2018 14:48",
                    "type": "p",
                  },
                  "One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...",
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "456",
        "nodeType": "function",
        "props": Object {
          "children": <ListGroupItem
            action={true}
            tag={[Function]}
            to="/articles/456"
>
            <Media
                        className="mb-5"
            >
                        <Media>
                                    <Media
                                                alt="Generic placeholder image"
                                                object={true}
                                                src="http://via.placeholder.com/128x128"
                                    />
                        </Media>
                        <Media
                                    body={true}
                                    className="ml-4"
                        >
                                    <Media
                                                heading={true}
                                    >
                                                Creating staging and other environments in Rails
                                    </Media>
                                    <p>
                                                Josef Strzibny
                                    </p>
                                    <p>
                                                02-28-2018 14:48
                                    </p>
                                    
                                        Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
                        </Media>
            </Media>
</ListGroupItem>,
          "tag": "ul",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "action": true,
            "children": <Media
              className="mb-5"
>
              <Media>
                            <Media
                                          alt="Generic placeholder image"
                                          object={true}
                                          src="http://via.placeholder.com/128x128"
                            />
              </Media>
              <Media
                            body={true}
                            className="ml-4"
              >
                            <Media
                                          heading={true}
                            >
                                          Creating staging and other environments in Rails
                            </Media>
                            <p>
                                          Josef Strzibny
                            </p>
                            <p>
                                          02-28-2018 14:48
                            </p>
                            
                                Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
              </Media>
</Media>,
            "tag": [Function],
            "to": "/articles/456",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Media>
                  <Media
                                    alt="Generic placeholder image"
                                    object={true}
                                    src="http://via.placeholder.com/128x128"
                  />
</Media>,
                <Media
                  body={true}
                  className="ml-4"
>
                  <Media
                                    heading={true}
                  >
                                    Creating staging and other environments in Rails
                  </Media>
                  <p>
                                    Josef Strzibny
                  </p>
                  <p>
                                    02-28-2018 14:48
                  </p>
                  
                      Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
</Media>,
              ],
              "className": "mb-5",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Media
                    alt="Generic placeholder image"
                    object={true}
                    src="http://via.placeholder.com/128x128"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "alt": "Generic placeholder image",
                    "object": true,
                    "src": "http://via.placeholder.com/128x128",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "body": true,
                  "children": Array [
                    <Media
                      heading={true}
>
                      Creating staging and other environments in Rails
</Media>,
                    <p>
                      Josef Strzibny
</p>,
                    <p>
                      02-28-2018 14:48
</p>,
                    "
    Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...",
                  ],
                  "className": "ml-4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Creating staging and other environments in Rails",
                      "heading": true,
                    },
                    "ref": null,
                    "rendered": "Creating staging and other environments in Rails",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Josef Strzibny",
                    },
                    "ref": null,
                    "rendered": "Josef Strzibny",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "02-28-2018 14:48",
                    },
                    "ref": null,
                    "rendered": "02-28-2018 14:48",
                    "type": "p",
                  },
                  "
    Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...",
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <div
            className="clearfix p-3"
>
            <Button
                        className="float-right"
                        color="primary"
                        id="add-article-btn"
                        tag={[Function]}
                        to="/articles/new"
            >
                        Add
            </Button>
             
</div>,
          Array [
            <ListGroup
              tag="ul"
>
              <ListGroupItem
                            action={true}
                            tag={[Function]}
                            to="/articles/123"
              >
                            <Media
                                          className="mb-5"
                            >
                                          <Media>
                                                        <Media
                                                                      alt="Generic placeholder image"
                                                                      object={true}
                                                                      src="http://via.placeholder.com/128x128"
                                                        />
                                          </Media>
                                          <Media
                                                        body={true}
                                                        className="ml-4"
                                          >
                                                        <Media
                                                                      heading={true}
                                                        >
                                                                      Hunting for great names in programming
                                                        </Media>
                                                        <p>
                                                                      dhh
                                                        </p>
                                                        <p>
                                                                      02-28-2018 14:48
                                                        </p>
                                                        One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
                                          </Media>
                            </Media>
              </ListGroupItem>
</ListGroup>,
            <ListGroup
              tag="ul"
>
              <ListGroupItem
                            action={true}
                            tag={[Function]}
                            to="/articles/456"
              >
                            <Media
                                          className="mb-5"
                            >
                                          <Media>
                                                        <Media
                                                                      alt="Generic placeholder image"
                                                                      object={true}
                                                                      src="http://via.placeholder.com/128x128"
                                                        />
                                          </Media>
                                          <Media
                                                        body={true}
                                                        className="ml-4"
                                          >
                                                        <Media
                                                                      heading={true}
                                                        >
                                                                      Creating staging and other environments in Rails
                                                        </Media>
                                                        <p>
                                                                      Josef Strzibny
                                                        </p>
                                                        <p>
                                                                      02-28-2018 14:48
                                                        </p>
                                                        
                                                            Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
                                          </Media>
                            </Media>
              </ListGroupItem>
</ListGroup>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                className="float-right"
                color="primary"
                id="add-article-btn"
                tag={[Function]}
                to="/articles/new"
>
                Add
</Button>,
              " ",
            ],
            "className": "clearfix p-3",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add",
                "className": "float-right",
                "color": "primary",
                "id": "add-article-btn",
                "tag": [Function],
                "to": "/articles/new",
              },
              "ref": null,
              "rendered": "Add",
              "type": [Function],
            },
            " ",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "123",
          "nodeType": "function",
          "props": Object {
            "children": <ListGroupItem
              action={true}
              tag={[Function]}
              to="/articles/123"
>
              <Media
                            className="mb-5"
              >
                            <Media>
                                          <Media
                                                        alt="Generic placeholder image"
                                                        object={true}
                                                        src="http://via.placeholder.com/128x128"
                                          />
                            </Media>
                            <Media
                                          body={true}
                                          className="ml-4"
                            >
                                          <Media
                                                        heading={true}
                                          >
                                                        Hunting for great names in programming
                                          </Media>
                                          <p>
                                                        dhh
                                          </p>
                                          <p>
                                                        02-28-2018 14:48
                                          </p>
                                          One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
                            </Media>
              </Media>
</ListGroupItem>,
            "tag": "ul",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "action": true,
              "children": <Media
                className="mb-5"
>
                <Media>
                                <Media
                                                alt="Generic placeholder image"
                                                object={true}
                                                src="http://via.placeholder.com/128x128"
                                />
                </Media>
                <Media
                                body={true}
                                className="ml-4"
                >
                                <Media
                                                heading={true}
                                >
                                                Hunting for great names in programming
                                </Media>
                                <p>
                                                dhh
                                </p>
                                <p>
                                                02-28-2018 14:48
                                </p>
                                One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
                </Media>
</Media>,
              "tag": [Function],
              "to": "/articles/123",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Media>
                    <Media
                                        alt="Generic placeholder image"
                                        object={true}
                                        src="http://via.placeholder.com/128x128"
                    />
</Media>,
                  <Media
                    body={true}
                    className="ml-4"
>
                    <Media
                                        heading={true}
                    >
                                        Hunting for great names in programming
                    </Media>
                    <p>
                                        dhh
                    </p>
                    <p>
                                        02-28-2018 14:48
                    </p>
                    One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...
</Media>,
                ],
                "className": "mb-5",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Media
                      alt="Generic placeholder image"
                      object={true}
                      src="http://via.placeholder.com/128x128"
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "alt": "Generic placeholder image",
                      "object": true,
                      "src": "http://via.placeholder.com/128x128",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "body": true,
                    "children": Array [
                      <Media
                        heading={true}
>
                        Hunting for great names in programming
</Media>,
                      <p>
                        dhh
</p>,
                      <p>
                        02-28-2018 14:48
</p>,
                      "One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...",
                    ],
                    "className": "ml-4",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Hunting for great names in programming",
                        "heading": true,
                      },
                      "ref": null,
                      "rendered": "Hunting for great names in programming",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "dhh",
                      },
                      "ref": null,
                      "rendered": "dhh",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "02-28-2018 14:48",
                      },
                      "ref": null,
                      "rendered": "02-28-2018 14:48",
                      "type": "p",
                    },
                    "One of the real delights of programming is picking great variable, method, and class names. But an even greater treat is when you can name pairs, o...",
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "456",
          "nodeType": "function",
          "props": Object {
            "children": <ListGroupItem
              action={true}
              tag={[Function]}
              to="/articles/456"
>
              <Media
                            className="mb-5"
              >
                            <Media>
                                          <Media
                                                        alt="Generic placeholder image"
                                                        object={true}
                                                        src="http://via.placeholder.com/128x128"
                                          />
                            </Media>
                            <Media
                                          body={true}
                                          className="ml-4"
                            >
                                          <Media
                                                        heading={true}
                                          >
                                                        Creating staging and other environments in Rails
                                          </Media>
                                          <p>
                                                        Josef Strzibny
                                          </p>
                                          <p>
                                                        02-28-2018 14:48
                                          </p>
                                          
                                              Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
                            </Media>
              </Media>
</ListGroupItem>,
            "tag": "ul",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "action": true,
              "children": <Media
                className="mb-5"
>
                <Media>
                                <Media
                                                alt="Generic placeholder image"
                                                object={true}
                                                src="http://via.placeholder.com/128x128"
                                />
                </Media>
                <Media
                                body={true}
                                className="ml-4"
                >
                                <Media
                                                heading={true}
                                >
                                                Creating staging and other environments in Rails
                                </Media>
                                <p>
                                                Josef Strzibny
                                </p>
                                <p>
                                                02-28-2018 14:48
                                </p>
                                
                                    Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
                </Media>
</Media>,
              "tag": [Function],
              "to": "/articles/456",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Media>
                    <Media
                                        alt="Generic placeholder image"
                                        object={true}
                                        src="http://via.placeholder.com/128x128"
                    />
</Media>,
                  <Media
                    body={true}
                    className="ml-4"
>
                    <Media
                                        heading={true}
                    >
                                        Creating staging and other environments in Rails
                    </Media>
                    <p>
                                        Josef Strzibny
                    </p>
                    <p>
                                        02-28-2018 14:48
                    </p>
                    
                        Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...
</Media>,
                ],
                "className": "mb-5",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Media
                      alt="Generic placeholder image"
                      object={true}
                      src="http://via.placeholder.com/128x128"
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "alt": "Generic placeholder image",
                      "object": true,
                      "src": "http://via.placeholder.com/128x128",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "body": true,
                    "children": Array [
                      <Media
                        heading={true}
>
                        Creating staging and other environments in Rails
</Media>,
                      <p>
                        Josef Strzibny
</p>,
                      <p>
                        02-28-2018 14:48
</p>,
                      "
    Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...",
                    ],
                    "className": "ml-4",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Creating staging and other environments in Rails",
                        "heading": true,
                      },
                      "ref": null,
                      "rendered": "Creating staging and other environments in Rails",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Josef Strzibny",
                      },
                      "ref": null,
                      "rendered": "Josef Strzibny",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "02-28-2018 14:48",
                      },
                      "ref": null,
                      "rendered": "02-28-2018 14:48",
                      "type": "p",
                    },
                    "
    Ruby on Rails come with three environments by default – development, testing and production. But sooner or later one has a need for staging en...",
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
