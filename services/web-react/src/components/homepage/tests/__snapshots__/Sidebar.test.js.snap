// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components HomePage Sidebar Snapshot should correctly render Sidebar 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <aside>
          <Form
                    className="search-form"
                    onSubmit={[Function]}
                    tag="form"
          >
                    <Input
                              className="form-control pr-5"
                              name="search"
                              onChange={[Function]}
                              placeholder="Search..."
                              type="search"
                              value=""
                    />
                    <button
                              className="search-button"
                              type="submit"
                    >
                              <FontAwesomeIcon$1
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon="search"
                                        listItem={false}
                                        mask={null}
                                        name=""
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        transform={null}
                              />
                    </button>
          </Form>
</aside>,
        <aside
          className="widget"
>
          <div
                    className="widget-title"
          >
                    Archives
          </div>
          <ul />
</aside>,
        <aside
          className="widget"
>
          <div
                    className="widget-title"
          >
                    Tags
          </div>
          <div
                    className="tagcloud"
          />
</aside>,
      ],
      "className": "mr-5",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Form
            className="search-form"
            onSubmit={[Function]}
            tag="form"
>
            <Input
                        className="form-control pr-5"
                        name="search"
                        onChange={[Function]}
                        placeholder="Search..."
                        type="search"
                        value=""
            />
            <button
                        className="search-button"
                        type="submit"
            >
                        <FontAwesomeIcon$1
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon="search"
                                    listItem={false}
                                    mask={null}
                                    name=""
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    transform={null}
                        />
            </button>
</Form>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Input
                className="form-control pr-5"
                name="search"
                onChange={[Function]}
                placeholder="Search..."
                type="search"
                value=""
/>,
              <button
                className="search-button"
                type="submit"
>
                <FontAwesomeIcon$1
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="search"
                                listItem={false}
                                mask={null}
                                name=""
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                transform={null}
                />
</button>,
            ],
            "className": "search-form",
            "onSubmit": [Function],
            "tag": "form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "form-control pr-5",
                "name": "search",
                "onChange": [Function],
                "placeholder": "Search...",
                "type": "search",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <FontAwesomeIcon$1
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="search"
                  listItem={false}
                  mask={null}
                  name=""
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  transform={null}
/>,
                "className": "search-button",
                "type": "submit",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "border": false,
                  "className": "",
                  "fixedWidth": false,
                  "flip": null,
                  "icon": "search",
                  "listItem": false,
                  "mask": null,
                  "name": "",
                  "pull": null,
                  "pulse": false,
                  "rotation": null,
                  "size": null,
                  "spin": false,
                  "symbol": false,
                  "transform": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "button",
            },
          ],
          "type": [Function],
        },
        "type": "aside",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="widget-title"
>
              Archives
</div>,
            <ul />,
          ],
          "className": "widget",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Archives",
              "className": "widget-title",
            },
            "ref": null,
            "rendered": "Archives",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "ul",
          },
        ],
        "type": "aside",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="widget-title"
>
              Tags
</div>,
            <div
              className="tagcloud"
/>,
          ],
          "className": "widget",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Tags",
              "className": "widget-title",
            },
            "ref": null,
            "rendered": "Tags",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "tagcloud",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "aside",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <aside>
            <Form
                        className="search-form"
                        onSubmit={[Function]}
                        tag="form"
            >
                        <Input
                                    className="form-control pr-5"
                                    name="search"
                                    onChange={[Function]}
                                    placeholder="Search..."
                                    type="search"
                                    value=""
                        />
                        <button
                                    className="search-button"
                                    type="submit"
                        >
                                    <FontAwesomeIcon$1
                                                border={false}
                                                className=""
                                                fixedWidth={false}
                                                flip={null}
                                                icon="search"
                                                listItem={false}
                                                mask={null}
                                                name=""
                                                pull={null}
                                                pulse={false}
                                                rotation={null}
                                                size={null}
                                                spin={false}
                                                symbol={false}
                                                transform={null}
                                    />
                        </button>
            </Form>
</aside>,
          <aside
            className="widget"
>
            <div
                        className="widget-title"
            >
                        Archives
            </div>
            <ul />
</aside>,
          <aside
            className="widget"
>
            <div
                        className="widget-title"
            >
                        Tags
            </div>
            <div
                        className="tagcloud"
            />
</aside>,
        ],
        "className": "mr-5",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form
              className="search-form"
              onSubmit={[Function]}
              tag="form"
>
              <Input
                            className="form-control pr-5"
                            name="search"
                            onChange={[Function]}
                            placeholder="Search..."
                            type="search"
                            value=""
              />
              <button
                            className="search-button"
                            type="submit"
              >
                            <FontAwesomeIcon$1
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon="search"
                                          listItem={false}
                                          mask={null}
                                          name=""
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          symbol={false}
                                          transform={null}
                            />
              </button>
</Form>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Input
                  className="form-control pr-5"
                  name="search"
                  onChange={[Function]}
                  placeholder="Search..."
                  type="search"
                  value=""
/>,
                <button
                  className="search-button"
                  type="submit"
>
                  <FontAwesomeIcon$1
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon="search"
                                    listItem={false}
                                    mask={null}
                                    name=""
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    transform={null}
                  />
</button>,
              ],
              "className": "search-form",
              "onSubmit": [Function],
              "tag": "form",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "form-control pr-5",
                  "name": "search",
                  "onChange": [Function],
                  "placeholder": "Search...",
                  "type": "search",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FontAwesomeIcon$1
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="search"
                    listItem={false}
                    mask={null}
                    name=""
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    transform={null}
/>,
                  "className": "search-button",
                  "type": "submit",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "border": false,
                    "className": "",
                    "fixedWidth": false,
                    "flip": null,
                    "icon": "search",
                    "listItem": false,
                    "mask": null,
                    "name": "",
                    "pull": null,
                    "pulse": false,
                    "rotation": null,
                    "size": null,
                    "spin": false,
                    "symbol": false,
                    "transform": null,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "button",
              },
            ],
            "type": [Function],
          },
          "type": "aside",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="widget-title"
>
                Archives
</div>,
              <ul />,
            ],
            "className": "widget",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Archives",
                "className": "widget-title",
              },
              "ref": null,
              "rendered": "Archives",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "ul",
            },
          ],
          "type": "aside",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="widget-title"
>
                Tags
</div>,
              <div
                className="tagcloud"
/>,
            ],
            "className": "widget",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Tags",
                "className": "widget-title",
              },
              "ref": null,
              "rendered": "Tags",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "tagcloud",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "aside",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
